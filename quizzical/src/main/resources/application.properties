# swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui.html
#propriedade que eu coloquei tentando fazer funcionar o swagger
#server.forward-headers-strategy=framework
#controle automatico do banco de dados
spring.jpa.hibernate.ddl-auto=update
#url do banco de dados
spring.datasource.url=jdbc:mariadb://localhost:3306/questoes
#username usado para inserir e controlar o banco
spring.datasource.username=root
#senha
spring.datasource.password=
#driver usado pelo banco
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#pra os endpoints automaticos sumirem tem que descomentar esta linha de baixo
#management.endpoints.enabled-by-default=false


#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8081/realms/myrealm

#spring.security.oauth2.client.registration.keycloak.client-id=login-app
#spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.keycloak.scope=openid

#spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8081/realms/myrealm
#spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username


#spring.security.oauth2.client.registration.keycloak.client-id=myrealm
#spring.security.oauth2.client.registration.keycloak.client-secret=hseaLXIE8QDKKPw9dAXckbNRGUIJWPLm
#spring.security.oauth2.client.registration.keycloak.scope=openid
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8081/realms/API
#spring.security.oauth2.authorizationserver.endpoint.jwk-set-uri=http://localhost:8081/realms/API/protocol/openid-connect/certs
#spring.security.oauth2.authorizationserver.endpoint.authorization-uri=http://localhost:8081/realms/API/protocol/openid-connect/auth
#spring.security.oauth2.authorizationserver.endpoint.oidc.logout-uri=http://localhost:8081/realms/API/protocol/openid-connect/logout
###############
spring.security.oauth2.client.registration.keycloak.client-id=myrealm
spring.security.oauth2.client.registration.keycloak.client-secret=hseaLXIE8QDKKPw9dAXckbNRGUIJWPLm
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8081/login/oauth2/code/keycloak
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.user-info-authentication-method=password
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8081/auth/realms/API/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8081/auth/realms/API/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8081/auth/realms/API/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8081/auth/realms/API/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8081/auth/realms/API/protocol/openid-connect/certs
#################

logging.level.org.springframework.security=DEBUG
#############
### server port
##server.port=8080
##spring.application.name=Spring 3 and Keycloak

### logging
#logging.level.org.springframework.security=INFO
#logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n

## keycloak
#spring.security.oauth2.client.provider.external.issuer-uri=http://localhost:8081/realms/external
#
#spring.security.oauth2.client.registration.external.provider=external
#spring.security.oauth2.client.registration.external.client-name=external-client
#spring.security.oauth2.client.registration.external.client-id=external-client
#spring.security.oauth2.client.registration.external.client-secret=ZsVzHX1XXUbKAGFTSRFWhdHHTyyhBx4P
#spring.security.oauth2.client.registration.external.scope=openid,offline_access,profile
#spring.security.oauth2.client.registration.external.authorization-grant-type=authorization_code
##################################


